{"version":3,"sources":["webpack:///./src/app/services/product.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAA2C;AACO;AAER;AAK1C;IAEE,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAED,oCAAW,GAAX,UAAY,eAAe;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,cAAI;YAC3D,IAAI,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;YACxC,OAAO,WAAW,CAAC,GAAG,CAAC,UAAS,OAAW;gBACvC,OAAO,EAAC,EAAE,EAAE,OAAO,CAAC,EAAE;oBACd,IAAI,EAAE,OAAO,CAAC,IAAI;oBAClB,KAAK,EAAE,OAAO,CAAC,KAAK;oBACpB,OAAO,EAAE,OAAO,CAAC,OAAO;oBACxB,WAAW,EAAE,OAAO,CAAC,WAAW;oBAChC,6BAA6B,EAAE,OAAO,CAAC,6BAA6B;oBACpE,qBAAqB,EAAE,OAAO,CAAC,qBAAqB;iBACrD,CAAC;YACV,CAAC,CAAC,CAAC;QACT,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED,uCAAc,GAAd,UAAe,EAAU,EAAE,QAAe;QACxC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,cAAI;YAC3D,IAAI,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;YACjC,OAAO,WAAW,CAAC,MAAM,CAAC,iBAAO,IAAI,cAAO,CAAC,EAAE,KAAK,EAAE,EAAjB,CAAiB,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI;QACpE,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IA1BQ,cAAc;QAD1B,gEAAU,EAAE;+EAGe,+DAAU;OAFzB,cAAc,CA2B1B;IAAD,qBAAC;CAAA;AA3B0B","file":"common.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport { Product } from 'src/app/models/product';\n\n@Injectable()\nexport class ProductService {\n\n  constructor(private http: HttpClient){\n  }\n\n  getProducts(productCategory) : Observable<Product[]> {\n      return this.http.get('assets/json/products.json').pipe(map(data=>{\n          let productList = data[productCategory];\n          return productList.map(function(product:any) {\n              return {id: product.id,\n                      name: product.name,\n                      price: product.price,\n                      imgUrls: product.imgUrls,\n                      description: product.description,\n                      additionalDescriptionHeadline: product.additionalDescriptionHeadline,\n                      additionalDescription: product.additionalDescription\n                    };\n            });\n      }));\n  }\n\n  getProductById(id: number, category:string) {\n    return this.http.get('assets/json/products.json').pipe(map(data=>{\n        let productList = data[category];\n        return productList.filter(product => product.id === id)[0] || null\n      }));\n    }\n}\n"],"sourceRoot":""}