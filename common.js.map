{"version":3,"sources":["webpack:///./src/app/models/order.ts","webpack:///./src/app/models/product.ts","webpack:///./src/app/pipes/pipe.module.ts","webpack:///./src/app/pipes/quantity.pipe.ts","webpack:///./src/app/services/product.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAA0C;AAO1C;IAAA;IAMA,CAAC;IANY,KAAK;QAJjB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;OAEW,KAAK,CAMjB;IAAD,YAAC;CAAA;AANiB;;;;;;;;;;;;;ACPlB;AAAA;AAAA;IAAA;IAQA,CAAC;IAAD,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;ACRwC;AACM;AAO/C;IAAA;IAA0B,CAAC;IAAd,UAAU;QALtB,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,2DAAY,CAAC;YAC5B,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,CAAC,2DAAY,CAAC;SACxB,CAAC;OACW,UAAU,CAAI;IAAD,iBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;ACR6B;AAKpD;IAAA;IAQA,CAAC;IANC,gCAAS,GAAT,UAAU,KAAU;QAClB,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,gBAAgB,EAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,GAAG,QAAQ,EAAC,CAAC,KAAK,CAAC;QACpF,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,GAAG,SAAS,EAAC,CAAC,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,GAAG,UAAU,EAAC,CAAC,KAAK,CAAC;QACtF,OAAO,KAAK,CAAC;IACf,CAAC;IANU,YAAY;QAHxB,0DAAI,CAAC;YACJ,IAAI,EAAE,UAAU;SACjB,CAAC;OACW,YAAY,CAQxB;IAAD,mBAAC;CAAA;AARwB;;;;;;;;;;;;;;;;;;;;ACLkB;AACO;AAEb;AAKrC;IAEE,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IACpC,CAAC;IAED,oCAAW,GAAX,UAAY,eAAuB;QAC/B,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,cAAI;YAC3D,IAAI,WAAW,GAAG,IAAI,CAAC,eAAe,CAAC,CAAC;YACxC,OAAO,WAAW,CAAC;QACvB,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAED,uCAAc,GAAd,UAAe,EAAU;QACvB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,2BAA2B,CAAC,CAAC,IAAI,CAAC,0DAAG,CAAC,cAAI;YAC3D,IAAI,WAAW,GAAG,IAAI,CAAC,qBAAqB,CAAC;gBAC3B,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;gBACjC,MAAM,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;gBACrC,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;gBACpC,MAAM,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;YACpD,OAAO,WAAW,CAAC,MAAM,CAAC,UAAC,OAAwB,IAAK,cAAO,CAAC,EAAE,KAAK,EAAE,EAAjB,CAAiB,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI;QACvF,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IArBQ,cAAc;QAD1B,gEAAU,EAAE;+EAGe,+DAAU;OAFzB,cAAc,CAsB1B;IAAD,qBAAC;CAAA;AAtB0B","file":"common.js","sourcesContent":["import { Injectable} from '@angular/core';\r\nimport { Product } from './product';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class Order {\r\n  order: any;\r\n  orderProducts:Product[];\r\n  totalQuantity:number;\r\n  totalQuantityStr:string;\r\n  date: any\r\n}\r\n","export class Product {\r\n  id: number;\r\n  name: string;\r\n  price: number;\r\n  imgUrls: Array<string>;\r\n  description: string;\r\n  additionalDescriptionHeadline: string;\r\n  additionalDescription: string;\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { QuantityPipe } from './quantity.pipe';\n\n@NgModule({\n  declarations: [QuantityPipe],\n  imports: [],\n  exports: [QuantityPipe]\n})\nexport class PipeModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'quantity'\n})\nexport class QuantityPipe implements PipeTransform {\n\n  transform(value: any): any {\n    value == 0 ? value = 'Корзина пустая': value == 1 ? value = value + ' Товар': value;\n    value < 5 ? value = value + ' Товара': value >= 5 ? value = value + ' Товаров': value;\n    return value;\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { Product } from 'src/app/models/product';\r\n\r\n@Injectable()\r\nexport class ProductService {\r\n\r\n  constructor(private http: HttpClient){\r\n  }\r\n\r\n  getProducts(productCategory: string) : Observable<Product[]> {\r\n      return this.http.get('assets/json/products.json').pipe(map(data=>{\r\n          let productList = data[productCategory];\r\n          return productList;\r\n      }));\r\n  }\r\n\r\n  getProductById(id: number) {\r\n    return this.http.get('assets/json/products.json').pipe(map(data=>{\r\n        let productList = data[\"productList__Chairs\"].\r\n                          concat(data[\"productList__Beds\"]).\r\n                          concat(data[\"productList__Cabinets\"]).\r\n                          concat(data[\"productList__Kitchen\"]).\r\n                          concat(data[\"productList__Home\"]);\r\n        return productList.filter((product: { id: number; }) => product.id === id)[0] || null\r\n      }));\r\n    }\r\n}\r\n"],"sourceRoot":""}